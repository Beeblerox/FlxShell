import hxclap.subarg.CmdArgStr;
import hxclap.E_CmdArgSyntax;
import flxsys.FlxCmdLine;
import flxsys.Folder;
import StringTools;
import Std;

ignoreRequired = false;
if (fileInput != null || input != null)
{
    ignoreRequired = true;
}

d = new CmdArgStr(
        "d",
        "directory",
        "Directory path (relative or absolute)",
        "Destination",
        (E_CmdArgSyntax.isOPT | E_CmdArgSyntax.isVALREQ),
        Shell.curDir.path
        );

cmdline = new FlxCmdLine("ls", [d], ignoreRequired);

status = cmdline.getParseReturn(Args);
if (status != FlxCmdLine.OK)
{
    return [status, "", ""];
}

if (input != null)
{
    if (Std.is(input[0], Folder))
    {
        dir = input[0];
    }
    else
    {
        dir = Shell.drive.readFolder(input[0], Shell.curDir.path);
    }
}

if (fileInput != null)
{
    dir = Shell.drive.readFolder(StringTools.trim(fileInput.content), Shell.curDir.path);
}

if (fileInput == null && input == null)
{
    dir = Shell.curDir;
    if (StringTools.trim(d._v).length < 1)
    {
        dir = Shell.curDir;
    }
    else
    {
        dir = Shell.drive.readFolder(d._v, Shell.curDir.path);
    }
}

return [dir.children, "name", "isDirectory"];